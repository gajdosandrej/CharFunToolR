% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cfN_PolyaEggenberger.R
\name{cfN_PolyaEggenberger}
\alias{cfN_PolyaEggenberger}
\title{Characteristic function of the Polya-Eggenberger distribution}
\usage{
cfN_PolyaEggenberger(t, a, b, m, cfX)
}
\arguments{
\item{t}{vector or array of real values, where the CF is evaluated.}

\item{a}{real number.}

\item{b}{real number.}

\item{m}{integer.}

\item{cfX}{function.}
}
\value{
Characteristic function \eqn{cf(t)} of the Polya-Eggenberger distribution.
}
\description{
\code{cfN_PolyaEggenberger(t, a, b, m)} evaluates the characteristic function \eqn{cf(t)} of the
Polya-Eggenberger distribution with the parameters \code{a} (\code{a} real), \code{b} (\code{b} real),
and \code{m} (\code{m} integer), i.e.
\deqn{cfN_PolyaEggenberger(t, a, b, m) = 2F1(-m,a,a+b,1-e^(1i*t)),}
where \eqn{2F1} denotes the Gauss hypergeometric function. For more details see [4], p. 525.

\code{cfN_PolyaEggenberger(t, a, b, m, cfX)} evaluates the compound characteristic function
\deqn{cf(t) = cfN_PolyaEggenberge(-1i*log(cfX(t)), a, b, m),} where \code{cfX} is function
handle of the characteristic function \eqn{cfX(t)} of a continuous distribution
and/or random variable \eqn{X}.

Note that such CF is characteristic function of the compound distribution,
i.e. distribution of the random variable \eqn{Y = X_1 + ... + X_N}, where \eqn{X_i ~ F_X}
are i.i.d. random variables with common CF \eqn{cfX(t)}, and \eqn{N ~ F_N} is
independent RV with its CF given by \eqn{cfN(t)}.
}
\note{
Ver.: 16-Sep-2018 19:03:05 (consistent with Matlab CharFunTool v1.3.0, 15-Nov-2016 13:36:26).
}
\examples{
## EXAMPLE1
# CF of the Polya-Eggenberger distribution with a = 2.2, b = 3.3, m = 4
a <- 2.2
b <- 3.3
m <- 4
t <- seq(-15, 15, length.out = 1001)
plotReIm(function(t)
        cfN_PolyaEggenberger(t, a, b, m), t,
        title = "CF of the Polya-Eggenberger distribution with a = 2.2, b = 3.3, m = 4")

## EXAMPLE2
# CF of the compound Polya-Eggenberger-Exponential distribution
a <- 2.2
b <- 3.3
m <- 4
lambda <- 5
cfX <- function(t)
        cfX_Exponential(t, lambda)
t <- seq(-50, 50, length.out = 501)
plotReIm(function(t)
        cfN_PolyaEggenberger(t, a, b, m, cfX), t,
        title = "CF of the compound Polya-Eggenberger-Exponential distribution")

## EXAMPLE3
# PDF/CDF of the compound Polya-Eggenberger-Exponential distribution
a <- 2.2
b <- 3.3
m <- 4
lambda <- 5
cfX <- function(t)
        cfX_Exponential(t, lambda)
cf <- function(t)
        cfN_PolyaEggenberger(t, a, b, m, cfX)
x <- seq(0, 2.5, length.out = 101)
prob <- c(0.9, 0.95, 0.99)
options <- list()
options$isCompound <- TRUE
result <- cf2DistGP(cf, x, prob, options)
}
\references{
[1] WITKOVSKY V., WIMMER G., DUBY T. (2016). Computing the aggregate loss
    distribution based on numerical inversion of the compound empirical
    characteristic function of frequency and severity. Preprint submitted
    to Insurance: Mathematics and Economics.

[2] DUBY T., WIMMER G., WITKOVSKY V.(2016). MATLAB toolbox CRM
    for computing distributions of collective risk models. Preprint submitted
    to Journal of Statistical Software.

[3] WITKOVSKY V. (2016). Numerical inversion of a characteristic function:
    An alternative tool to form the probability distribution
    of output quantity in linear measurement models. Acta IMEKO, 5(3), 32-44.

[4] WIMMER G., ALTMANN G. (1999). Thesaurus of univariate discrete
    probability distributions. STAMM Verlag GmbH, Essen, Germany. ISBN 3-87773-025-6.
}
\seealso{
Other Discrete Probability Distribution: 
\code{\link{cfN_Binomial}()},
\code{\link{cfN_Delaporte}()},
\code{\link{cfN_GeneralizedPoisson}()},
\code{\link{cfN_Geometric}()},
\code{\link{cfN_Logarithmic}()},
\code{\link{cfN_NegativeBinomial}()},
\code{\link{cfN_Poisson}()},
\code{\link{cfN_Quinkert}()},
\code{\link{cfN_Waring}()}
}
\concept{Discrete Probability Distribution}
