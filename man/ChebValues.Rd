% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ChebValues.R
\name{ChebValues}
\alias{ChebValues}
\title{ChebValues}
\usage{
ChebValues(coeffs)
}
\arguments{
\item{coeffs}{Chebyshev coefficients}
}
\value{
\eqn{V = ChebValues(C)} returns the n-dimensional vector of (polynomial)
values evaluated at the Chebyshev points x such that \eqn{V(i) = f(x(i))=
C(1)*T_{0}(x(i)) + C(2)*T_{1}(x(i)) + ... + C(N)*T_{N-1}(x(i))} (where \eqn{T_k(x)}
denotes the k-th 1st-kind Chebyshev polynomial, and \eqn{x(i)} are the
2nd-kind Chebyshev nodes.

If the input C is an (n x m)-matrix then \eqn{V = ChebValues(C)} returns
(n x m)-matrix of values V such that \eqn{V(i,j) = P_j(x_i) =
C(1,j)*T_{0}(x(i)) + C(2,j)*T_{1}(x(i)) + ... + C(N,j)*T_{N-1}(x(i))}.
}
\description{
\code{ChebValues(coeffs)} converts the n-dimensional Chebyshev coefficients to
}
\note{
Ver.: 15-Nov-2021 17:55:08 (consistent with Matlab CharFunTool v1.3.0, 28-May-2021 14:28:24).
}
\examples{
## EXAMPLE1 (Values of Sine function evaluated Chebyshev points on (-pi,pi))
   n      <- 2^5+1
   domain <- c(-pi,pi)
   x      <- ChebPoints(n,domain)
   f      <-list( sin(x[[1]]))
   coeffs <- ChebCoefficients(f)
   V      <- ChebValues(coeffs)
   print(list(x[[1]], coeffs, f, V))

## EXAMPLE2 (Chebyshev values of the Sine and the Cosine on (-pi,pi))
   n      <- 2^5+1
   domain <- c(-pi,pi)
   x      <- ChebPoints(n,domain)
   f      <-list( sin(x[[1]]), cos(x[[1]]))
   coeffs <- ChebCoefficients(f)
   V      <- ChebValues(coeffs)
   print(list(x[[1]], coeffs, f, V))
}
\seealso{
Other Utility Function: 
\code{\link{ChebCoefficients}()},
\code{\link{ChebPoints}()},
\code{\link{ChebPolyValues}()},
\code{\link{ChebPoly}()},
\code{\link{GammaLog}()},
\code{\link{GammaMultiLog}()},
\code{\link{GammaMulti}()},
\code{\link{GammaZX}()},
\code{\link{Hypergeom1F1MatApprox}()},
\code{\link{Hypergeom1F1Mat}()},
\code{\link{Hypergeom2F1Mat}()},
\code{\link{Hypergeom2F1}()},
\code{\link{HypergeompFqMat}()},
\code{\link{InterpChebValues}()},
\code{\link{hypergeom1F1}()},
\code{\link{interpBarycentric}()}
}
\concept{Utility Function}
